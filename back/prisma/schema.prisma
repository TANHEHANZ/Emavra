generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id_user  Int    @id @default(autoincrement())
  email    String @unique @db.VarChar(100)
  password String @db.VarChar(150)
  Post     Post[]
}

model Proyectos {
  id_proyectos Int  @id @default(autoincrement())
  postId       Int
  postRelacion Post @relation(fields: [postId], references: [id_post])
}

model Noticias {
  id_noticias  Int  @id @default(autoincrement())
  postId       Int
  postRelacion Post @relation(fields: [postId], references: [id_post])
}

model Manteniemiento {
  id_mantenimiento Int  @id @default(autoincrement())
  postId           Int
  postRelacion     Post @relation(fields: [postId], references: [id_post])
}

model Parques {
  id_parques   Int  @id @default(autoincrement())
  postId       Int
  postRelacion Post @relation(fields: [postId], references: [id_post])
}

model EmavaTransparente {
  id_transparencia Int      @id @default(autoincrement())
  Nombre           String
  Descripcion      String?  @db.VarChar(150)
  tipo             String
  fecha            DateTime
  multimedia       String[]
}
model Reglamentos {
  id_reglamento Int      @id @default(autoincrement())
  Nombre           String
  tipo             String
  fecha            DateTime
  multimedia       String[]
}

model Post {
  id_post        Int              @id @default(autoincrement())
  titulo         String
  Descripcion    String?          @db.VarChar(500)
  contenido      String           @db.VarChar(7000)
  estado         Boolean          @default(true)
  destacar       Boolean          @default(false)
  fecha          DateTime         @default(now())
  ubicacion      String
  multimedia     String[]
  autor          String?
  Proyectos      Proyectos[]
  Noticias       Noticias[]
  Manteniemiento Manteniemiento[]
  User           User?            @relation(fields: [userId_user], references: [id_user])
  userId_user    Int?
  Parques        Parques[]
}
