generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id_user  Int    @id @default(autoincrement())
  email    String @db.VarChar(100)
  password String @db.VarChar(150)
  Post     Post[]
}

model Proyectos {
  id_proyectos Int  @id @default(autoincrement())
  postId       Int
  postRelacion Post @relation(fields: [postId], references: [id_post])
}

model Noticias {
  id_noticias  Int  @id @default(autoincrement())
  postId       Int
  postRelacion Post @relation(fields: [postId], references: [id_post])
}

model Manteniemiento {
  id_mantenimiento Int  @id @default(autoincrement())
  postId           Int
  postRelacion     Post @relation(fields: [postId], references: [id_post])
}

model EmavaTransparente {
  id_transparencia Int      @id @default(autoincrement())
  Nombre           String
  Descripcion      String?  @db.VarChar(150)
  multimediaId     Int
  fecha            DateTime
  multimedia       String[]

  // multimediaRelacion Multimedia @relation(fields: [multimediaId], references: [id_multimedia])
}

model Post {
  id_post        Int              @id @default(autoincrement())
  userId         Int
  userRelacion   User             @relation(fields: [userId], references: [id_user])
  titulo         String
  Descripcion    String?          @db.VarChar(150)
  contenido      String           @db.VarChar(5000)
  estado         Boolean          @default(true)
  destacar       Int
  fecha          DateTime         @default(now())
  ubicacion      String
  multimedia     String[]
  autor          String?
  Proyectos      Proyectos[]
  Noticias       Noticias[]
  Manteniemiento Manteniemiento[]
}

// model Multimedia {
//   id_multimedia     Int                 @id @default(autoincrement())
//   url_recurso       String              @db.VarChar(200)
//   // posts             Post[]              @relation("PostMultimedia") 
//   EmavaTransparente EmavaTransparente[]
// }
